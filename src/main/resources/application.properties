# ===================================================================
# Authoring Acceptance Gateway DEFAULT PROPERTIES
# ===================================================================
# This file holds the defaults and should not be changed.
#   Override this using a properties file holding just your changes.
#   See: https://docs.spring.io/spring-boot/docs/2.4.3/reference/htmlsingle/#boot-features-external-config-application-property-files
# ===================================================================


# ----------------------------------------
# AWS Auto-configuration
# ----------------------------------------
cloud.aws.region.auto=false
cloud.aws.region.static=us-east-1


# ----------------------------------------
# AWS Request Signing
# When using AWS Elasticsearch Service, this application requires http signing to be able to communicate with ES
# See https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-request-signing.html
# Disabled by default
# ----------------------------------------
aag.aws.request-signing.enabled=false


# ----------------------------------------
# Elasticsearch Data Store
#   All persistent data is held in Elasticsearch.
#   https://www.elastic.co/products/elasticsearch
#
# If you have more than one Elasticsearch node you may want to adjust the number of shards and replicas.
# The defaults are for simple single node installations.
# See https://www.elastic.co/blog/how-many-shards-should-i-have-in-my-elasticsearch-cluster
# ----------------------------------------

# HTTP URL of the Elasticsearch cluster (comma separated list).
elasticsearch.urls=http://localhost:9200

elasticsearch.api-key=

# Prefix to use in this application's Elasticsearch index names.
# Useful for index naming per environment e.g. dev_
elasticsearch.index.prefix=

# Second prefix to use in this application's Elasticsearch index names.
# This splits the indexes per application in the same environment
elasticsearch.index.app.prefix=aag-

# Username used to access Elasticsearch (if required)
elasticsearch.username=

# Password used to access Elasticsearch (if required)
elasticsearch.password=

# Number of shards per index
# This setting is only used when the index is created
elasticsearch.index.shards=1

# Number of replicas per index
# This setting is only used when the index is created
elasticsearch.index.replicas=0

# Number of terms in the terms query
# The default value in ES7 is set to 65536 which is sufficient for most indices
elasticsearch.index.max.terms.count=500000

# The component save batch size
elasticvc.save.batch-size=5000


# ----------------------------------------
# Security
# ----------------------------------------

# Basic Authentication.
spring.security.user.name=aag
spring.security.user.password=aag

# Name of the role required to access the REST interface.
# Nginx will need to be set up to grab the roles from the Identity Management Service
ims-security.required-role=


# ----------------------------------------
# Web Properties
# ----------------------------------------

# Server HTTP port.
server.port=8090

# Context path of the web application
server.servlet.contextPath=/authoring-acceptance-gateway

# Max upload file size. Values can use the suffixes "MB" or "KB" to indicate megabytes or kilobytes, respectively.
spring.servlet.multipart.max-file-size=1024MB
spring.servlet.multipart.max-request-size=1024MB

# Swagger / Spring Fox workaround for Spring Boot 2.6.X. See https://github.com/springfox/springfox/issues/3462
spring.mvc.pathmatch.matching-strategy=ant-path-matcher

# Allow these characters in URL query without encoding (used in ECL)
server.tomcat.relaxed-query-chars={,},|

# JSON pretty printing for human readable responses
json.serialization.indent_output=true

# Handles X-Forwarded-XXX headers
# Support additional web proxy headers
# See https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#howto.webserver.use-behind-a-proxy-server
server.forward-headers-strategy=FRAMEWORK


# ----------------------------------------
# Snowstorm
#   Snowstorm is used to resolve user RBAC roles as these are often controlled per branch or code system.
# ----------------------------------------
snowstorm.url=http://localhost:8080/snowstorm/snomed-ct/
# Toggle whether to check Snowstorm is accessible on start up
snowstorm.connection.test=true

# ----------------------------------------
# ActiveMQ JMS Message Broker
# ----------------------------------------

# URL of the ActiveMQ broker. Auto-generated by default.
#spring.activemq.broker-url=

# Whether the default broker URL should be in memory. Ignored if an explicit broker has been specified.
spring.activemq.in-memory=true

# Login user of the broker.
spring.activemq.user=

# Login password of the broker.
spring.activemq.password=

# Cap the amount of activities sent per message to prevent memory issues
activemq.max.message.concept-activities=250

# Prefix to use for queue names.
# Useful to separate environments.
snowstorm.jms.queue.prefix=default

# JIRA configuration
aag.jira.url=
aag.jira.username
aag.jira.consumerKey=
aag.jira.privateKeyName=
aag.jira.ticket.priority=
aag.jira.ticket.reporter=
aag.jira.ticket.project=
aag.jira.ticket.issueType=


aag.jira.ticket.customField.snomedct.product=
aag.jira.ticket.customField.reporting.entity=
aag.jira.ticket.customField.reporting.entity.default.value=
aag.jira.ticket.customField.reporting.stage=
aag.jira.ticket.customField.reporting.stage.default.value=
aag.jira.ticket.customField.product.release.date=


# ----------------------------------------
# Logging
#   Available logging levels are DEBUG, INFO, WARN, ERROR or FATAL.
# ----------------------------------------

# Snowstorm logging level.
logging.level.org.snomed.snowstorm=INFO

# Authoring Acceptance Gateway logging level.
logging.level.org.snomed.aag=INFO

# Spring logging level.
logging.level.org.springframework=INFO

# Root logging level (everything else).
logging.level.root=INFO


# ----------------------------------------
# Spring cloud consul config
# ----------------------------------------
spring.cloud.consul.enabled=false
#spring.cloud.consul.config.prefix=consul
#spring.application.name=authoring-acceptance-gateway
#spring.cloud.consul.discovery.healthCheckPath=/authoring-acceptance-gateway/version
#spring.cloud.consul.config.profile-separator=/
#spring.config.import=consul:localhost:8500

# ----------------------------------------
# Spring vault config
# ----------------------------------------
spring.cloud.vault.enabled=false
#spring.cloud.vault.token=00000000-0000-0000-0000-000000000000
#spring.cloud.vault.scheme=http
#spring.cloud.vault.kv.enabled=true
#spring.config.import=consul:localhost:8500,vault://
#spring.cloud.vault.uri=http://localhost:8200


# ----------------------------------------
# Springdoc Swagger config
# ----------------------------------------
# To completely hide the schemas section
springdoc.swagger-ui.defaultModelsExpandDepth=-1
# Sort by tag
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.operationsSorter=alpha
# Hide doc expansion
springdoc.swagger-ui.docExpansion=none
# Enable tryout by default
springdoc.swagger-ui.tryItOutEnabled=true
# Disable generic response
springdoc.override-with-generic-response=false
# Expose spring-boot-actuator endpoints
springdoc.show-actuator=true
springdoc.swagger-ui.groups-order=desc